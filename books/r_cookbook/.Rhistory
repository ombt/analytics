counts$Tpickup
head(counts$Tpickup)
head(counts)
head(counts$TPickup)
plot(counts$TPickup)
plot(counts$TPMiss)
attach(counts)
search()
head(counts$Tpickup)
head(counts)
original.counts = counts
searc()
search()
TPlace = TPickup-TPmiss-TRMiss-TDMiss-THMiss-TRSMiss-TMMiss
TPlace = TPickup-TPPiss-TRMiss-TDMiss-THMiss-TRSMiss-TMMiss
TPlace = TPickup-TPMiss-TRMiss-TDMiss-THMiss-TRSMiss-TMMiss
xx=cbind(counts, TPlace)
names(xx)
counts=xx
head(counts)
counts$FNAME[(TPickup-TPlace) < 0]
counts$FNAME[(TPickup-TPlace) > 0]
sum(counts$FNAME[(TPickup-TPlace) > 0])
sum((TPickup-TPlace) > 0)
sum((TPickup-TPlace) == 0)
sum((TPickup-TPlace) < 0)
plot(TPickup-TPlace)
head(count)
head(counts)
unique(PRODUCT)
unique(count[.c("PRODUCT",)
unique(count[.c("PRODUCT","LANE")])
unique(counts[.c("PRODUCT","LANE")])
unique(counts[,c("PRODUCT","LANE")])
sum(counts[,c("PRODUCT","LANE")])
count(counts[,c("PRODUCT","LANE")])
nrow(counts[,c("PRODUCT","LANE")])
unique(counts[,c("PRODUCT","LANE")])
head(counts)
unique(counts[,c("OUTPUT")])
q()
ls()
ls(counts)
search()
plot(counts$TMMiss)
closedevs()
sum(counts$TMMiss.0)
sum(counts$TDMiss.0)
sum(counts$TDMiss>0)
sum(counts$TPlace0)
sum(counts$TPlace>0)
sum(counts$THMiss>0)
sum(counts$TPMiss>0)
max(counts$TPMiss)
q()
quantile
help(quantile)
help(quantile)
x=rnorm(1000,mean=100,sd=15)
quantile(x,probs=0.999)
quantile(x,probs=0.99)
quantile(x,probs=0.9999)
quantile(x,probs=0.99999)
x=rnorm(100000,mean=100,sd=15)
quantile(x,probs=0.99999)
quantile(x,probs=0.9999)
quantile(x,probs=0.999)
quantile(x,probs=0.99)
quantile(x,probs=0.9)
quantile(x,probs=0.999999)
x=rnorm(10000000,mean=100,sd=15)
quantile(x,probs=0.999999)
x=rnorm(100000,mean=100,sd=15)
quantile(x,probs=0.999)
head9x)
head(x)
names(x)
str(x)
quantile(x,probs=0.50)
x=rnorm(100000,mean=100,sd=15)
quantile(x,probs=0.995)
apropos(norm)
apropos("norm")
help("dnorm")
pnorm(140,mean=100,sd=15)
q()
ls()
install_and_load("zoo")
install_and_load("xts")
install_and_load("xts")
names(count)
names(counts)
d=as.date(counts$TIMESTAMP)
d=as.datetime(counts$TIMESTAMP)
search()
ls(package;xts)
ls(package:xts)
d=as.Datetime(counts$TIMESTAMP)
d=as.DateTime(counts$TIMESTAMP)
d=as.Date(counts$TIMESTAMP)
d
apropos("as.Date")
apropos("as.Datetime")
apropos("as.Datetimes")
apropos("as.DateTimes")
help("DateTime")
help("DateTimes")
Datetime
DateTime
DateTimes
mysrc("ch7.R")
q()
names(counts)
mysrc("ch14.R")
mysrc("ch14.R")
dt
nrow(dt)
length(dt)
length(unique(dt))
??Warning
mysrc("ch14.R")
zoo.ts
names(zoo.ts)
attr(zoo.ts)
attributes(zoo.ts)
head(zoo.ts)
date[1,]
zoo.ts[1,]
zoo.ts[2,]
length(x)
mysrc("ch14.R")
nrow(x)
length9x)
length(x)
x
mysrc("ch14.R")
zoo.ts
xts.ts
mysrc("ch14.R")
nrow(xts.ts)
nrow(zoo.ts)
class(zoo.ts)
tpe(zoo.ts)
type(zoo.ts)
mode(zoo.ts)
mode(xts.ts)
is.matrix(xts.ts)
is.matrix(zoo.ts)
names(zoo,ts)
names(zoo.ts)
summary(zoo.ts)
mode(zoo.ts)
class(zoo.ts)
is.dataframe(zoo.ts)
is.data.frame(zoo.ts)
is.list(zoo.ts)
is.list(vector.ts)
is.vector(zoo.ts)
str(zoo.ts)
print(zoo.ts)
names(zoo.ts)
rownames(zoo.ts)
colnames(zoo.ts)
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
zoo.ts
zoo.ts
mysrc("ch14.R")
load_and_install("Rmetrics")
install_an_load("Rmetrics")
install_and_load("Rmetrics")
ls()
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
help(xts)
help(zoo)
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
names(zoo.counts.ts)
zoo.counts.ts[1,]
mysrc("ch14.R")
options()
nrow(z.cnts.ts)
z.cnts.ts
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.2.R")
mysrc("ch14.2.R")
mysrc("ch14.2.R")
mysrc("ch14.2.R")
mysrc("ch14.2.R")
mysrc("ch14.2.R")
help(diff)
q()
counts
names(counts)
my.src(
my.src("counts.R")
mysrc("counts.R")
mysrc("count.R")
mysrc("count.R")
ls(cnts)
cnts=read_count_csv()
nrow(cnts)
sorted.cnts = sort_count_csv(cnts)
head(sorted.cnts)
mysrc(
mysrc("count.R")
ls()
ls(scnts)
cnts
cnts = read_count_csv()
scnts = sort_count_csv(cnts)
write_sorted_count_csv(scnts)
help(write.table)
mysrc("count.R")
cnts = read_count_csv()
scnts = sort_count_csv(cnts)
write_sorted_count_csv(scnts)
q()
ls()
q()
ls(scnt)
ls(scnts)
library(MASS)
split(scnts$MACHINE,scnts$LANE)
split(scnts$MACHINE,scnts$LANE.scnts$STAGE)
split(scnts$MACHINE,scnts$LANE,scnts$STAGE)
help(split)
vignettes("split")
vignetes("split")
vignette("split")
args(split)
help(split)
ls(scnts)
flist=ls(scnts)
flist
flist[c(1,2,5,7,8]=NULL
flist[c(1,2,5,7,8)]=NULL
flist
delete(flist[1])
flist[1]=NULL
flist[1]
ls(flist)
flist[-c(1,2,5,7,8)]
flist[-(5:12)]
flist
flist=flis[-c(1,2,5,7,8,10:17)]
flist=flist[-c(1,2,5,7,8,10:17)]
flist
g=split(scnts,flist)
g=split(scnts,scnts$LANE)
head(g)
names(g)
str(g)
library(MASS)
names(Cars93)
g=split(Cars93$MPG.city, Cars93$Origin)
names(g)
median(g$USA)
median(g$non-USA)
typeof
typeof(g)
str(g)
median(g$"non-USA")
g$"non-USA"
g$USA
mean(g$"non-USA")
mean(g$"USA")
names(scnts)
attach(scnts)
search()
detach()
g=split(scnts, list(scnts$MACHINE,scnts$LANE,scnts$STAGE,scnts$PRODUCT))
names(g)
ncol(g)
nrow(g)
typeof(g)
names(g)
g[[1]]
g[[2]]
lapply(g,length)
lapply(g,nrow)
g=split(scnts, list(scnts$MACHINE,scnts$LANE,scnts$PRODUCT))
lapply(g,nrow)
names(g,nrow)
names(g)
par(mfrow=c(4,5))
plot(g)
closedevs()
g[[1]]
par(mfrow=c(4,5))
plot(g[,"TPickup"])
plot(g[,"TPickup"],g[,"TPlace"]))
plot(g[,"TPickup"],g[,"TPlace"])
names(g[1,])
names(g)
names(g[[1]])
q()
names(xx)
names(scnts)
q()
lapply(g,nrow)
gnr=lapply(g,nrow)
gnr
gnr=as.vector(lapply(g,nrow))
gnr
seq_no(as.vector(lapply(g,nrow))>0)
seq.no(as.vector(lapply(g,nrow))>0)
apropos('seq")
apropos("seq")
seq_along(as.vector(lapply(g,nrow))>0)
typeof(lapply(g,nrow))
as.vector(lapply(g,nrow))
as.vector(lapply(g,nrow))==0
gg=g[as.vector(lapply(g,nrow))==0,]
gg=g[as.vector(lapply(g,nrow))==0]
names(gg)
gg=g[as.vector(lapply(g,nrow))>0]
gg
names(gg)
mysrc("counts2.R")
list.files()
getwd()
list.files()
mysrc("count2.R")
mysrc("count2.R")
mysrc("count2.R")
mysrc("count2.R")
nz.grp.scnts[[1]]
names(nz.grp.scnts[[1]])
names(nz.grp.scnts[[1]])
names(nz.grp.scnts)
names(nz.grp.scnts[[1]])
nz.grp.scnts[[1]]$TPickup
plot(nz.grp.scnts[[1]]$TPickup,nz.s
clsedevs()
closedevs()
names(nz.grp.scnts)
names(nz.grp.scnts[[1]])
q()
mysrc("count2.R")
mysrc("count2.R")
names(nz.grp.scnts[[1]])
sum(nz.grp.scnts[[1]]$TPlace)
sum(nz.grp.scnts[[2]]$TPlace)
sum(nz.grp.scnts[[6]]$TPlace)
sum(nz.grp.scnts[[7]]$TPlace)
TPlace
mysrc("count2.R")
TPlace
sum(nz.grp.scnts[[7]]$TPlace)
sum(nz.grp.scnts[[1]]$TPlace)
sum(nz.grp.scnts[[1]]$TPickup)
names(nz.grp.scnts[[1]])
nz.grp.scnts[[1]]$TPlace
mysrc("count2.R")
plot(nz.grp.scnts[[1]]$TPickup,nz.grp.scnts[[1]]$TErrors)
nz.grp.scnts[[2]]$TPickup)
max(nz.grp.scnts[[2]]$TPickup,nz.grp.scnts[[2]]$TErrors)
max(nz.grp.scnts[[2]]$TErrors)
min(nz.grp.scnts[[2]]$TErrors)
nrow(nz.grp.scnts)
length(nz.grp.scnts)
mysrc("count2.R")
closedevs()
mysrc("count2.R")
closedevs()
q()
ls()
rm(list=ls())
q
q()
ls()
mysrc("count2.R")
closedevs()
ls()
names(nz.grp.scnts)
names(nz.grp.scnts[[1]])
apropos("seq")
seq_along(nz.grp.scnts)
(nz.grp.scnts[[1]])
seq_along(nz.grp.scnts)
seq_along(nz.grp.scnts[[2]])
seq_along(nz.grp.scnts[[2]][1])
seq_along(nz.grp.scnts[[2]]$TError)
i=seq_along(nz.grp.scnts[[2]]$TError)
ip1=i+1
ip1-i
i[10]
i[1]
1p1[1]
ip1[1]
ip[-1]
i[-1]
i[length(i)]
ip`[length(ip1)]
ip1[length(ip1)]
i[length(i)]
i[-length(i)]
i[length(i)]
ip1[length(ip1)]
ip1[-length(ip1)]
mysrc("count3.R")
mysrc("count3.R")
mysrc("count3.R")
mysrc("count3.R")
q()
colnames(nz.grp.scnts)
names(nz.grp.scnts)
nz.grp.scnts["1.2.1.PTA635AA001_BA001_CA001_RRA635BA001_3",]
nz.grp.scnts[["1.2.1.PTA635AA001_BA001_CA001_RRA635BA001_3"]]
nz.grp.scnts[-1]
nz.grp.scnts[1]
nz.grp.scnts[1][1,]
nz.grp.scnts[[1]][1,]
nz.grp.scnts[[1]][-1,]
nrow(nz.grp.scnts[[1]])
nz.grp.scnts[["1.2.1.PTA635AA001_BA001_CA001_RRA635BA001_3"]]
mysrc("count4.R")
name
lapply(nz.grp.scnts,nrow)
lapply(nz.grp.scnts,names)
nz.grp.scnts,names[["5.1.1.PTA635AA001_BA001_CA001_RSA635BA001_4"]][["MACHINE"]]
nz.grp.scnts[["5.1.1.PTA635AA001_BA001_CA001_RSA635BA001_4"]][["MACHINE"]]
xx=nz.grp.scnts
nrow(xx[["5.1.1.PTA635AA001_BA001_CA001_RSA635BA001_4"]])
nrow(xx[["5.1.1.PTA635AA001_BA001_CA001_RSA635BA001_4"]][-507,])
mysrc("count4.R")
mysrc("count4.R")
fcnts[[1]]
assign_seq_no
higher_seq_no
lower_seq_no
mysrc("count4.R")
mysrc("count4.R")
fcnts[[1]]
save.data()
write.data()
apropos("data")
apropos("write")
apropos("save")
help(saveimage)
help(save.image)
save.image()
mysrc("count4.R")
mysrc("count4.R")
mysrc("count4.R")
plot(1:nrow(fcnts[[1]]), fcnts[[1]]$TPickup)
plot(1:nrow(fcnts[[1]]), fcnts[[1]]$TPickup-min(fcnts[[1]]$TPickup))
plot(1:nrow(fcnts[[1]]), fcnts[[1]]$TPickup-fcnts[[1]]$TPlace)
sum(fcnts[[1]]$TPlace)
sum(fcnts[[1]]$TPickup)
sum(fcnts[[1]]$TPickup-fcnts[[1]]$TPlace)
head(fcnts[[1]])
head(fcnts[[1]][,1])
tail(fcnts[[1]][,1])
tail(fcnts[[5]][,1])
q()
source("ch14.2.R")
source("ch14.R")
source("ch14.R")
source("ch13.R")
ls()
install_and_load("faraway")
source("ch13.R")
source("ch12.R")
source("ch11.R")
mysrc("ch11.R")
mysrc("ch10.R")
mysrc("ch9.R")
mysrc("ch14.R")
mysrc("ch14.R")
mysrc("ch14.R")
nrow(counts$TPickup)
length(counts$TPickup)
length(counts$TPlace)
names(counts)
mysrc("ch14.R")
closedevs()
mysrc("ch14.2.R")
q()
ls()
derrs
derrsi
TPlace
q()
help(diff)
q()
