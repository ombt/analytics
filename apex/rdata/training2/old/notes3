sum
sum(tr_mqt[["_tcy"]])
sum(tr_mqt[["_tcx"]])
sum(tr_mqt[["_tlx"]])
sum(tr_mqt[["_tly"]])
mean(tr_mqt[["_tly"]])
sd(tr_mqt[["_tly"]])
names(tr_mqt)
count
nrow(unique(tr_mqt[["_pcb_id"]]))
xx=unique(tr_mqt[["_pcb_id"]])
head(xx)
nrow(xx)
str(xx)
ncol(xx)
length(xx)
length(tr_mqt[["_pcb_id"]])
length(tr_mqt[["_filename_id"]])
min(tr_mqt[["_filename_id"]])
max(tr_mqt[["_filename_id"]])
length(unique(tr_mqt[["_filename_id"]]))
length(unique(tr_mqt[["_filename_id"]]))/5
class(tr_mqt)
str(tr_mqt)
q()
help.start()
options("browser")
options("browser")="firefox"
q()
ls()
head(xx)
Sys.getenv()
pwd
cd
cd
[wd
pwd
q()
lf('tr*")
lf("tr*")
length(tr_count)
typeof(tr_count)
typeof(tr_mqt)
is.data.frame(tr_mqt)
is.data.frame(tr_count)
ls(pattern="tr_[acfnt].*")
rm(list=ls(pattern="tr_[acfnt].*"))
lf("tr*")
lf("pg*")
db=pg_open_db("training_data")
tr_aoi=pg_aoi_load_data(db,"all")
is.data.frame(lf("tr_*"))
is.data.frame(tr_aoi)
is.data.frame(tr_mqt)
lf("tr_*")
tr_count=pg_u0x_load_data(db,"count")
tr_time=pg_u0x_load_data(db,"time")
tr_feeder=pg_u0x_load_data(db,"feeder")
tr_nozzle=pg_u0x_load_data(db,"nozzle")
lf("tr_*")
q()
lf()
lf("min*")
min_max_mqt_tstamps
lf("*stamp*")
to.vector(min_max_mqt_tstamps)
to.list(min_max_mqt_tstamps)
as.vector(min_max_mqt_tstamps)
type.of(min_max_mqt_tstamps)
typeof(min_max_mqt_tstamps)
source("rlib/generic_utils.R")
tstamp_to_datetime(min_max_mqt_tstamps)
tstamp_to_datetime(min_max_mqt_tstamps[[1]])
tstamp_to_datetime(min_max_mqt_tstamps[[2]])
tstamp_to_datetime(min_max_mqt_tstamps)
source("rlib/generic_utils.R")
datetime_to_tstamp(c(tstamp_to_datetime(min_max_mqt_tstamps)))
datetime_to_tstamp(
c(tstamp_to_datetime(min_max_mqt_tstamps))
datetime_to_tstamp(c(tstamp_to_datetime(min_max_mqt_tstamps))[c(1:2)])
datetime_to_tstamp(tstamp_to_datetime(min_max_mqt_tstamps)[[1]])
datetime_to_tstamp("2016-11-10 00:00:09 CST")
datetime_to_tstamp("2016-11-10 00:00:09")
datetime_to_tstamp("2016/11/10 00:00:09")
q()
db=pg_open_db("training_data")
tr
trd
trd <- data.frame()
trd[["aoi"]] = pg_aoi_load_data_view(db,"all")
typeof(trd)
rm(trd)
trd <- list()
trd[["aoi"]] = pg_aoi_load_data_view(db,"all")
nrows(trd$aoi)
nrow(trd$aoi)
trd[["time"]] = pg_u0x_load_data_view(db,"time")
trd[["count"]] = pg_u0x_load_data_view(db,"count")
trd[["feeder"]] = pg_u0x_load_data_view(db,"feeder")
trd[["nozzle"]] = pg_u0x_load_data_view(db,"nozzle")
trd[["mqt"]] = pg_u0x_load_data_view(db,"mountqualitytrace")
trd[["mqt"]] = pg_u0x_load_data_view(db,"mount_quality_trace")
nrow(trd)
nrow(trd$mqt)
names(trd$mqt)
q()
pwd
lf()
names(trd)
names(trd$aoi)
names(trd$aoi)
names(trd$count)
names(trd$count[["_pcb_id"]])
nrow(trd$count[["_pcb_id"]])
length(trd$count[["_pcb_id"]])
length(trd$count[,trd$count[["_pcb_id"]] == trd$aoi[["_pcbid"]]])
length(trd$count[,trd$count[["_pcb_id"]] == trd$aoi[["_pcbid"]]])
names(trd$aoi)
names(trd$count)
length(trd$count[trd$count[["_pcb_id"]] == trd$aoi[["_pcbid"]],"_pcb_id"])
nrow(trd$count[trd$count[["_pcb_id"]] == trd$aoi[["_pcbid"]],"_pcb_id"])
nrow(trd$count[trd$count[["_pcb_id"]] in trd$aoi[["_pcbid"]],"_pcb_id"])
nrow(trd$count[trd$count[["_pcb_id"]] in (trd$aoi[["_pcbid"]]),"_pcb_id"])
nrow(trd$count[trd$count[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],"_pcb_id"])
length(trd$count[trd$count[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],"_pcb_id"])
length(trd$count[trd$count[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],])
#trd$count[trd$count[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],])
trd_w_aoi_pcbid = list()
trd_w_aoi_pcbid["count"]] = trd$count[trd$count[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],])
trd_w_aoi_pcbid["count"]] = trd$count[trd$count[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],]
trd_w_aoi_pcbid[["count"]] = trd$count[trd$count[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],]
trd_w_aoi_pcbid[["time"]] = trd$time[trd$time[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],]
trd_w_aoi_pcbid[["feeder"]] = trd$feeder[trd$feeder[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],]
trd_w_aoi_pcbid[["nozzle"]] = trd$feeder[trd$mqt[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],]
trd_w_aoi_pcbid[["nozzle"]] = trd$nozzle[trd$nozzle[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],]
trd_w_aoi_pcbid[["mqt"]] = trd$mqt[trd$mqt[["_pcb_id"]] %in% trd$aoi[["_pcbid"]],]
names(trd_w_aoi_pcbid)
names(trd)
trd_w_aoi_pcbid[["aoi"]] = trd$aoi
names(trd)
names(trd_w_aoi_pcbid)
gc()
names(trd_w_aoi_pcbid$count)
unique(trd_w_aoi_pcbid[["count"]]$_pcb_id)
unique(trd_w_aoi_pcbid[["count"]][["_pcb_id"]]
)
nrow(unique(trd_w_aoi_pcbid[["count"]][["_pcb_id"]])
nrow(unique(trd_w_aoi_pcbid[["count"]][["_pcb_id"]]))
length(unique(trd_w_aoi_pcbid[["count"]][["_pcb_id"]]))
names(trd_w_aoi_pcbid$count)
names(trd_w_aoi_pcbid$count[["_machine_order"]])
unique(trd_w_aoi_pcbid$count[["_machine_order"]])
names(trd_w_aoi_pcbid$mqt)
help(rowSum)
help(rowSums)
names(trd_w_aoi_pcbid$mqt)
names(trd_w_aoi_pcbid$count
)
total_error_count = rowSums(trd_w_aoi_pcbid$count[,c("_tdmiss","_thmiss",_tmmiss","_tpmiss","_trmiss","_trsmiss")])
total_error_count = rowSums(trd_w_aoi_pcbid$count[,c("_tdmiss","_thmiss","_tmmiss","_tpmiss","_trmiss","_trsmiss")])
total_error_count = rowSums(trd_w_aoi_pcbid$count[,c("_tdmiss","_thmiss","_tmmiss","_tpmiss","_trmiss","_trsmiss")],rm.na=TRUE)
total_error_count = rowSums(trd_w_aoi_pcbid$count[,c("_tdmiss","_thmiss","_tmmiss","_tpmiss","_trmiss","_trsmiss")])
help(rowSums)
total_error_count = rowSums(trd_w_aoi_pcbid$count[,c("_tdmiss","_thmiss","_tmmiss","_tpmiss","_trmiss","_trsmiss")],na.rm=TRUE)
nrow(total_error_count)
length(total_error_count)
trd_w_aoi_pcbid$count[["total_error_count"]] = rowSums(trd_w_aoi_pcbid$count[,c("_tdmiss","_thmiss","_tmmiss","_tpmiss","_trmiss","_trsmiss")],na.rm=TRUE)
trd_w_aoi_pcbid$count[["total_error_count"]] = rowSums(trd_w_aoi_pcbid$count[,c("_tdmiss","_thmiss","_tmmiss","_tpmiss","_trmiss","_trsmiss")],na.rm=TRUE)
names(trd_w_aoi_pcbid$count)
nrow(trd_w_aoi_pcbid$count$total_error_count)
length(trd_w_aoi_pcbid$count$total_error_count)
length(trd_w_aoi_pcbid$count$"_tpickup"))
length(trd_w_aoi_pcbid$count$"_tpickup")
length(trd_w_aoi_pcbid$count$_tpickup)
length(trd_w_aoi_pcbid$count[["_tpickup"]])
trd_w_aoi_pcbid$count[["total_error_count"]] = NULL
trd_w_aoi_pcbid$count[["total_error_count"]]
names(trd_w_aoi_pcbid$count)
save.history()
write.history()
lf("*hist*")
lf("*hist*",envpos=2)
lf("*hist*",env.pos=2)
lf("*hist*",env.pos=3)
lf("*hist*",env.pos=4)
lf("*hist*",env.pos=5)
savehistory()
Sys.getenv("R_HISTSIZE")
?savehistory
lf("tr*")
xx = split(trd_w_aoi_pcbid$count, trd_w_aoi_pcbid$count[["_pcb_id"]])
names(xx)
head(xx)
nrow(xx)
length(xx)
lf()
head(xx)
str(xx)
ncol(xx)
names(xx)
typeof(xx)
rm(xx)
lf("tr*")
names(trd)
names(trd$aoi)
mysrc("denorm.data.R")
mysrc("denorm.data.R")
mysrc("denorm.data.R")
nrow(trd$aoi)
nrow(trd$count)
nrow(trd$count[["_pcb_id"]])
nrow(trd$count[,"_pcb_id"])
length(trd$count[,"_pcb_id"])
length(trd$aoi[,"_pcbid"])
names(trd_denorm$aoi_count)
xx=aggregate("_board" ~ "_pcbid", $trd_denorm$aoi_count,sum)
xx=aggregate("_board" ~ "_pcbid", trd_denorm$aoi_count,sum)
xx=aggregate(_board ~ _pcbid, trd_denorm$aoi_count,sum)
xx=aggregate('_board' ~ _pcbid, trd_denorm$aoi_count,sum)
xx=aggregate('_board' ~ '_pcbid', trd_denorm$aoi_count,sum)
help(aggregate)
help(aggregate)
help(aggregate)
xx=aggregate(trd_denorm$aoi_count[["_board"]], c(trd_denorm$aoi_count[["_pcbid"]]),sum)
xx=aggregate(trd_denorm$aoi_count[["_board"]], c(pcbid=trd_denorm$aoi_count[["_pcbid"]]),sum)
xx=aggregate(trd_denorm$aoi_count[,"_board"], c(pcbid=trd_denorm$aoi_count[["_pcbid"]]),sum)
trd_denorm$aoi_count[,"_board"]
typeof(trd_denorm$aoi_count[,"_board"])
typeof(trd_denorm$aoi_count[["_board"]])
is.list(trd_denorm$aoi_count[["_board"]])
is.array(trd_denorm$aoi_count[["_board"]])
trd_denorm$aoi_count[["_board"]]
summary(trd_denorm$aoi_count[["_board"]])
trd_denorm$aoi_count[trd_denorm$aoi_count[["_board"]]>1,]
trd_denorm$aoi_count[trd_denorm$aoi_count[["_board"]]>1]
trd_denorm$aoi_count[trd_denorm$aoi_count[["_board"]]==1,]
trd_denorm$aoi_count[trd_denorm$aoi_count[["_board"]]!=1,]
trd_denorm$aoi_count[trd_denorm$aoi_count[["_board"]]!=1,"_board"]
trd_denorm$aoi_count[trd_denorm$aoi_count[["_board"]]!=1,c("_board","_pcb_id")]
trd_denorm$aoi_count[trd_denorm$aoi_count[["_board"]]!=1,c("_board","_pcbid")]
lf("tr*")
trd_denorm$aoi_count[trd_denorm$aoi_count[["_board"]]!=1,c("_board","_pcbid")]
names(trd_denorm)
names(trd_denorm$aoi_count)
name(trd_
)
name(trd)
names(trd)
my.src("denorm_data.R")
mysrc("denorm_data.R")
mysrc("denorm.data.R")
names(trd_denorm)
install_and_load
install_and_load('reshape')
lf("tr*")
names(trd)
df_list=list(trd$aoi,trd$time,trd$vount,trd$feeder,trd$nozzle)
data <- merge_recurse(df_list)
names(data)
rm(data)
lf()
mysrc("denorm.data.R")
q()
lf()
db=pg_open_db("training_data2")
lf("pg*")
aoi_all = pg_aoi_load_data(db,"all")
nrows(aoi_all)
nrow(aoi_all)
aoi_good = pg_aoi_load_data(db,"good")
nrow(aoi_good)
aoi_no_good = pg_aoi_load_data(db,"no_good")
nrow(aoi_no_good)
u0x_count = pg_u0x_load_data(db,"count")
u0x_time = pg_u0x_load_data(db,"time")
u0x_feeder = pg_u0x_load_data(db,"feeder")
u0x_nozzle = pg_u0x_load_data(db,"nozzle")
lf()
lf("aoi* u0*")
lf("aoi*,u0*")
lf("aoi*")
lf("u0*")
lf("u0*","aoi*")
lf("u0*","aoi*")
lf
lf("u0*")
lf("aoi*")
nrow(u0x_time)
nrow(u0x_count)
nrow(u0x_feeder)
nrow(u0x_nozzle)
u0x_mqt = pg_u0x_load_data(db,"mount_quality_trace")
q()
lf()
db=pg_open_db("training_data2")
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
pa
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
source("rlib/postgresql_utils.R")
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
source("rlib/postgresql_utils.R")
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
lf()
lf('db')
db
query <- "select table_schema, table_name from information_schema.tables where table_schema not in ( 'pg_catalog', 'information_schema' ) and table_type = 'VIEW'"
pg_exec_query(db, query)
pg_exec_query(db, query)
pg_exec_query(db, query)
x=pg_exec_query(db, query)
paste(x$table_schema,x$table_name)
paste(x$table_schema,x$table_name, sep=".")
pg_close_db(db)
source("rlib/postgresql_utils.R")
source("rlib/postgresql_utils.R")
source("rlib/postgresql_utils.R")
db=pg_open_db("training_data2")
db
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
"u01.pa_pcb_totals_aoi_per_machine_view" in db$vws
"u01.pa_pcb_totals_aoi_per_machine_view" %in% db$vws
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
source("rlib/postgresql_utils.R")
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
pg_load_table
source("rlib/postgresql_utils.R")
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
nrow(pa)
names(pa)
uniq(pa$upx_mjsid)
unique(pa$upx_mjsid)
pa$upx_mjsid)
pa$
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
names(pa)
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
nrow(pa)
nrow(pa#aoi_status)
;
nrow(pa#$oi_status)
;
nrow(pa$oi_status)
nrow(pa$aoi_status)
/vws
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
source("rlib/postgresql_utils.R")
source("rlib/postgresql_utils.R")
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
pq
pa
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
head(pa)
names(pa)
q()
db=pg_open_db("training_data2")
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
lf()
sb
db
lf
lf()
lf(pa)
;
;
lf()
pa
colnames(pa)
str(pa)
lappy(pa,min)
lapply(pa,min)
pa_min=lapply(pa,min)
pa_max=lapply(pa,max)
pa_range=pa_max-pa_min
length(pa_min)
pa_min
length(pa_max)
pa_max
pa_min
pa$dpc_tmount[pa$dpc_tmount < 0]
pa$dpc_tmount < 0
pa$dpc_tmount[pa$dpc_tmount < 0]
pa$dpc_tmount[pa$dpc_tpickup < 0]
pa$dpc_tmount[pa$dpc_tpickup > 1000]
pa$dpc_tmount[pa$dpc_tpickup > 500]
pa$dpc_tmount[pa$dpc_tpickup > 400]
pa$dpc_tmount[pa$dpc_tpickup > 200]
pa$dpc_tpickup[pa$dpc_tpickup > 200]
pa$dpc_tpickup[pa$dpc_tpickup > 100]
library(plyr)
count(pa,"dpc_pickup")
count(pa,"dpc_tpickup")
count(pa[pa$dpc_tpickup>0,],"dpc_tpickup")
count(pa[pa$dpc_tpickup>200,],"dpc_tpickup")
count(pa[pa$dpc_tpickup>150,],"dpc_tpickup")
pa_max
options(max.print)
options
options()
options()$max.print
options()$warn
options()$unzip
options(max.print=999999)
options()$max.priont
options()$max.print
pa_max
names(pa)
install.packages("class")
install.load
install.and.load
lf("*install*")
install_and_load("class")
knn
names(pa)
pa$upx_mjsid == "NISSAN_DA_RS_RR_MASTER-part4"
lnegth(pa$upx_mjsid == "NISSAN_DA_RS_RR_MASTER-part4")
length(pa$upx_mjsid == "NISSAN_DA_RS_RR_MASTER-part4")
length((pa$upx_mjsid == "NISSAN_DA_RS_RR_MASTER-
(pa$upx_mjsid == "NISSAN_DA_R&&(pa$upi_lotname == "RSD160LF-00")
pap = pa[pa$upx_mjsid == "NISSAN_DA_RS_RR_MASTER-part4",]
names(pap)
length(pap$dpc_tpickup)
unique(pa$upx_mjsid)
unique(pap$upx_mjsid)
unique(pap$upi_lotname)
attr
attr(pap,"mjsid") = unique(pap$upx_mjsid)
attr(pap,"lotname") = unique(pap$upi_lotname)
attr(pap)
attr(pap,"mjsid")
attr(pap,"lotname")
attr(pap,"lotname")
lattr(pap)
names(pap)
attributes(pap)
names(pap)
nrow(pap)
ncol(pap)
is.numeric(pap[1,])
pap[1,]
is.numeric(pap)
names(pap)
lapply(pap, is.numeric)
count(lapply(pap, is.numeric)==TRUE)
count(lapply(pap, is.numeric)==FALSE)
count(lapply(pap, is.numeric))
count(lapply(pap, is.numeric)==TRUE)
papn=pap[,lapply(pap, is.numeric)==TRUE]
ncol(papn)
names(papn)
knn(papn)
?knn
nrow(papn)
knn(papn[1:3000,],papn[3001:6030,])
?knn
q()
db=pg_open_db("training_data2")
pa=pg_load_table(db,"u01.pa_pcb_totals_aoi_per_machine_view")
pap = pa[pa$upx_mjsid == "NISSAN_DA_RS_RR_MASTER-part4",]
attr(pap,"mjsid") = unique(pap$upx_mjsid)
attr(pap,"lotname") = unique(pap$upi_lotname)
attr(pap,"lotname")
save
save()
save.env()
env()
?save*
;
save()
save.image()
lf()
pg_close_db(db)
x=pap
attr(x,"mjsid")
rm(x)
attr(x,"mjsid")
sink("pap.cols")
names(pap)
sink()
names(pap)
options(max.print=999999)
sink("pap.cols")
names(pap)
sink()
names(pap)
source("pap.cols")
source("pap.cols")
pap_cols
lf("pa*")
papnc = papn[,pap_cols]
pap_cols
papnc = papn[,pap_cols]
names(pap_cols)
papnc = papn[,pap_cols]
papnc = papn[[pap_cols]]
papnc = papn[,as.list(pap_cols)]
papnc = papn[,as.vector(pap_cols)]
names(pap)
is.data.frame(pap)
names(pap)
subset
lf("pa*")
names(pap)
names(papn)
pap_cols
nrow(pap)
ncol(pap)
papt = subset(pap,select=pap_cols)
ncol(papt)
names(papt)
save.history()
savehistory()
