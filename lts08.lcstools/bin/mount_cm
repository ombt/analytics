#!/bin/sh
#

# mount_cm iom
#
# iom - iom number of the CM log and core file to mount 
#       Note: CM must be in-service for command to work 
#             Only needs to be done once for each CM on a SP.
#

usage ()
{
    echo "Usage: mount_cm [-ur] iom"
    echo " "
    echo "       -u     Unmount the CM" 
    echo "       -r     Unmount then mount the CM" 
    exit 1
}

failure ()
{
    echo "mount_cm: failure, $1"
    exit 1
}

#parse mount/umount options, by default mount CM only 
MOUNT=1
UMOUNT=1
while getopts ur OPLETTER
do 
    case $OPLETTER in
    u) # unmount CM only  
        UMOUNT=1
        MOUNT=0
        ;;

    r) # unmount/mount CM  
        UMOUNT=1
        ;;

    \?)
        echo ""
        usage
        ;;
    esac
    shift
done


#check argument list length
if [ $# != 1 ]
then
    echo "Invalid number of arguments, $# "
    echo ""
    usage
fi

# check for valid slot number (1-17 but not 9)
case "$1" in
    [1-8])
        ;;

    1[0-7])
        ;;

    *)
        echo "Invalid slot number $1"
        echo ""
        usage
        ;;
    esac

IOM_NUM=$1

SP_DIR=/Telica/swCM/IOM-$IOM_NUM
SP_DIR_BAD=/Telica/swCM/IOM-$IOM_NUM-BAD_DIR

#for PARM
#do echo "parm: $PARM $#"
#done

# CM directory to mount for log and core
CM_DIR=/mnt/cmLogCore/Telica/swCM
CM_IP=192.168.252.$IOM_NUM
#MOUNT_OPTS="-o timeout=10,retry=1,soft,ro,acregmin=1,acregmax=2,acdirmin=1,acdirmax=2"
MOUNT_OPTS="-o timeout=10,retry=1,soft"

# Mount commands
MOUNT_CMD="mount $MOUNT_OPTS $CM_IP:$CM_DIR $SP_DIR"
UMOUNT_CMD="umount $CM_IP:$CM_DIR"
CM_PROC1_LOG_DIR=$SP_DIR/proc1/log


#check if umount first
if [ $UMOUNT == 1 ]
then
#check if CM mounted
    if  [ -d "$CM_PROC1_LOG_DIR" ]
    then 
#        echo "umount_cmd: $UMOUNT_CMD"
        $UMOUNT_CMD
        echo ""
        echo "Sucessfully unmounted CM IOM-$IOM_NUM log and core directories in $SP_DIR"
    fi

    rmdir $SP_DIR
    if [ -d "$SP_DIR" ]
    then
        echo ""
        echo "Failed to remove directory $SP_DIR"
        echo "Instead move directory $SP_DIR to $SP_DIR_BAD."
        mv $SP_DIR $SP_DIR_BAD
    fi
fi


#check if mount needed 
if [ $MOUNT == 0 ]
then
    exit 1
fi

# create directory on SP to use as mount point
if  [ ! -d "$SP_DIR" ]
then 
    echo "make directory $SP_DIR"
    mkdir -p $SP_DIR
    [ $? -ne 0 ] && failure "Failed to make directory $SP_DIR"
fi

#check if already mounted
if  [ ! -d "$CM_PROC1_LOG_DIR" ]
then 
#    echo "mount_cmd: $MOUNT_CMD"
#    echo ""
    $MOUNT_CMD
    [ $? -ne 0 ] && failure "Failed to mount CM, $MOUNT_CMD"
fi

# check that CM processor log directory is accesible 
if  [ ! -d "$CM_PROC1_LOG_DIR" ]
then 
    failure "Log directory not mounted: $CM_PROC1_LOG_DIR"
fi

echo ""
echo "Sucessfully mounted CM IOM-$IOM_NUM log and core directories in $SP_DIR"

#ls -l $SP_DIR/*/log
